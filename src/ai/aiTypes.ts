import { Card } from '../types/game';

/**
 * AI difficulty levels for boardgame.io's MCTS bot
 */
export enum AIDifficulty {
  NOVICE = 'novice',
  EASY = 'easy',
  MEDIUM = 'medium',
  HARD = 'hard',
  NIGHTMARE = 'nightmare'
}

/**
 * Represents a move generated by the enumerate function
 */
export interface AIMove {
  cards: string[];     // Card IDs
  column: number;      // Target column
  isStake: boolean;    // Whether this is a stake move
  score?: number;      // Computed score for moves
  didStake?: boolean;  // Legacy compatibility
  splitPair?: boolean; // Whether this move splits a pair
  playerId?: string;   // ID of the player making the move
  gameId?: string;     // ID of the game
  playerName?: string; // Name of the player
}

/**
 * Configuration options for MCTS bot
 */
export interface MCTSConfig {
  iterations?: number;    // Number of iterations for MCTS
  playoutDepth?: number;  // Depth of playouts
  seed?: string;          // Random seed
  timeout?: number;       // Maximum computation time in ms
}

/**
 * Represents a node in the minimax visualization tree
 * Kept for compatibility with visualization tools
 */
export interface GameNode {
  source: string;
  target: string;
  depth: number;
  score: number;
  cards: string;
  column: number;
  isStake: boolean;
  n: number;
  minimaxResult?: number;
  childState?: string;
  alphaBeta?: string;
  beatAlphaBeta?: boolean;
  maximizing?: boolean;
  label?: string;
  cardColor?: string;
}

/**
 * Result of AI decision-making process
 * Kept for compatibility with existing code
 */
export interface AIDecisionResult {
  move: AIMove | null;
  searchDepth: number;
  nodesExplored: number;
  timeElapsed: number;
  candidateMoves: number;
}